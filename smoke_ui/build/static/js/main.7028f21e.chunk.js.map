{"version":3,"sources":["pages/HomePage.js","components/PlayerRow.js","components/PlayerTable.js","components/SearchField.js","components/Searchbar.js","components/InsertBar.js","pages/Players.js","components/LicenseRow.js","components/LicenseTable.js","pages/PlayerInfo.js","components/GamesRow.js","components/GamesTable.js","pages/Games.js","components/StudioRow.js","components/StudioTable.js","test-data/studios.js","pages/Studios.js","pages/StudioInfo.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","to","PlayerRow","player","onView","username","email","phone","birthdate","onClick","PlayerTable","players","id","map","i","SearchField","field","onSet","key","name","key_name","useState","value","setValue","useEffect","for","type","onChange","e","target","SearchBar","title","params","OnSubmit","fullquery","setFullQueryVal","val","console","log","param","InsertBar","Players","setPlayerToView","navigate","useNavigate","playerSearchParams","loadPlayers","a","alert","JSON","stringify","LicenseRow","license","game","purchase_date","purchase_price","valid","LicenseTable","licenses","PlayerInfo","PlayerToView","setUsername","setEmail","setPhone","setBirthdate","editPlayer","placeholder","GamesRow","GamesTable","games","Games","gameSearchParams","StudioRow","studio","website","StudioTable","studios","teststudios","studio_id","Studios","setStudioToView","setStudios","studioSearchParams","loadStudios","StudioInfo","StudioToView","setName","setWebsite","editStudio","editedStudio","App","SetPlayer","className","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","siteurl","homepage","basename","URL","pathname","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7028f21e.chunk.js","sourcesContent":["import React from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nfunction HomePage(){\r\n\r\n    return(\r\n        <>\r\n        <h1>Home Page</h1>\r\n        <Link to=\"/Players\">Players</Link>\r\n        <Link to=\"/Studios\">Studios</Link>\r\n        <Link to=\"/Games\">Games</Link>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { MdEdit} from 'react-icons/md'\r\n\r\nfunction PlayerRow({ player, onView }) {\r\n    return (\r\n        <tr>\r\n            <td>{player.username}</td>\r\n            <td>{player.email}</td>\r\n            <td>{player.phone}</td>\r\n            <td>{player.birthdate}</td>\r\n            <td>\r\n            <td><MdEdit onClick={() => onView(player)}/></td>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default PlayerRow;","import React from \"react\"\r\nimport PlayerRow from './PlayerRow';\r\n\r\nfunction PlayerTable({players, onView}){\r\n    return(\r\n        <>\r\n        <table id=\"players\">\r\n            <thead>\r\n                <th>Username</th>\r\n                <th>e-mail</th>\r\n                <th>phone</th>\r\n                <th>DOB</th>\r\n            </thead>\r\n            <tbody>\r\n            {players.map((player, i) => <PlayerRow player={player}\r\n                    onView={onView}\r\n                    key={i} />)}\r\n            </tbody>\r\n        </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlayerTable;","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nfunction SearchField({field, onSet}){\r\n    const fieldName = field.name;\r\n    const key = field.key_name;\r\n    const [value, setValue] = useState();\r\n\r\n    useEffect(()=>{\r\n        //console.log(key, value);\r\n        onSet(key, value);\r\n    })\r\n\r\n    return(\r\n        <>\r\n        <label for={field.name}>{field.name}</label>\r\n        <input type=\"text\" id={field.name} onChange={e=>{setValue(e.target.value);}}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchField;","import React from \"react\";\r\nimport SearchField from \"./SearchField\";\r\n\r\nfunction SearchBar ({title, params, OnSubmit}){\r\n    let fullquery = {};\r\n    const setFullQueryVal = (key, val) => {\r\n        fullquery[key] = val;\r\n        console.log(fullquery);\r\n    }\r\n    return(\r\n        <>\r\n        <label>{title}</label>\r\n        {params.map((param, i) => <SearchField field={param} onSet={setFullQueryVal} key={i}/>)}\r\n        <button onClick={() => {OnSubmit(fullquery); return false;}}>Search</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React from \"react\";\r\nimport SearchField from \"./SearchField\";\r\n\r\nfunction InsertBar ({title, params, OnSubmit}){\r\n    let fullquery = {};\r\n    const setFullQueryVal = (key, val) => {\r\n        fullquery[key] = val;\r\n        console.log(fullquery);\r\n    }\r\n    return(\r\n        <>\r\n        <label>{title}</label>\r\n        {params.map((param, i) => <SearchField field={param} onSet={setFullQueryVal} key={i}/>)}\r\n        <button onClick={() => {OnSubmit(fullquery); return false;}}>Search</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InsertBar;","import React from 'react';\r\nimport { Link, Navigate } from 'react-router-dom';\r\nimport PlayerTable from '../components/PlayerTable';\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport SearchBar from '../components/Searchbar';\r\nimport InsertBar from '../components/InsertBar';\r\nimport  testplayers from '../test-data/players' \r\n\r\nfunction Players({setPlayerToView}){\r\n    \r\n    const [players, setPlayers] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    const defaultPlayer = {username: \"kaushik\",  email: \"pahujak@oregonstate.edu\", phone: \"1234567890\", birthdate: \"02/22/2002\"}\r\n\r\n    const playerSearchParams = [\r\n        {\r\n            name: \"Username\",\r\n            type: \"text\",\r\n            key_name: \"username\"\r\n        },\r\n        {\r\n            name: \"E-mail\",\r\n            type: \"text\",\r\n            key_name: \"email\"\r\n        },\r\n        {\r\n            name: \"Phone\",\r\n            type: \"number\",\r\n            key_name: \"phone\"\r\n        },\r\n        {\r\n            name: \"DOB\",\r\n            type: \"text\",\r\n            key_name: \"birthdate\"\r\n        },\r\n    ]\r\n\r\n    const Search = (params) => {\r\n        alert(JSON.stringify(params));\r\n    }\r\n\r\n    const Insert = (params) => {\r\n        alert(JSON.stringify(params));\r\n        loadPlayers()\r\n    }\r\n\r\n    const onView = (player) => {\r\n        setPlayerToView(player);\r\n        navigate('/PlayerInfo');\r\n    };\r\n\r\n    const loadPlayers = async () => {\r\n        //const response = await fetch('/players')\r\n        //const data = await response.json();\r\n        //setPlayers(testplayers);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadPlayers();\r\n    }, []);\r\n\r\n    return(\r\n        <>\r\n        <h2>List of Players</h2>\r\n        <SearchBar title=\"Search Players\" params={playerSearchParams} OnSubmit={Search}></SearchBar>\r\n        <PlayerTable players={players} onView={onView}></PlayerTable>\r\n        <button onClick={()=>{setPlayerToView({username: \"asdf\", email: \"fdsa\", phone: \"0123456789\", birthdate: \"11/11/1111\"}); return false;}}>select a player </button>\r\n        <InsertBar title=\"Insert Player\" params={playerSearchParams} OnSubmit={Insert}></InsertBar>        </>\r\n    )\r\n}\r\n\r\nexport default Players;","import React from \"react\";\r\n\r\nfunction LicenseRow({license}){\r\n    return(\r\n        <>\r\n        <tr>\r\n            <td>{license.game}</td>\r\n            <td>{license.purchase_date}</td>\r\n            <td>{license.purchase_price}</td>\r\n            <td>{license.valid}</td>\r\n        </tr>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LicenseRow;","import React from \"react\";\r\nimport LicenseRow from \"./LicenseRow\";\r\n\r\nfunction LicenseTable({licenses}){\r\n    return(\r\n        <>\r\n        <table>\r\n            <thead>\r\n                <th>Title</th>\r\n                <th>Purchased</th>\r\n                <th>Price</th>\r\n                <th>Valid</th>\r\n            </thead>\r\n            <tbody>\r\n                {licenses.map((license, i) => <LicenseRow license={license} key={i}/>)}\r\n            </tbody>\r\n        </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LicenseTable;","import React, { useState } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport LicenseTable from '../components/LicenseTable';\r\n\r\nfunction PlayerInfo({PlayerToView}){\r\n    \r\n    console.log(PlayerToView);\r\n\r\n    const [username, setUsername] = useState(PlayerToView.username);\r\n    const [email, setEmail] = useState(PlayerToView.email);\r\n    const [phone, setPhone] = useState(PlayerToView.phone);\r\n    const [birthdate, setBirthdate] = useState(PlayerToView.birthdate);\r\n\r\n    const history = useNavigate();\r\n\r\n    const editPlayer = async () => {\r\n    };\r\n\r\n\r\n    const PlayerLicenses  = [\r\n        {\r\n            game: \"Return of the Obra Dinn\",\r\n            purchase_date: \"01/22/2020\",\r\n            purchase_price: \"$30.00\",\r\n            valid: \"true\"\r\n        }\r\n    ]\r\n    return(\r\n        <>\r\n        <div>\r\n            <h1>Edit player</h1>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter username here\"\r\n                value={username}\r\n                onChange={e => setUsername(e.target.value)} />\r\n            <input\r\n                type=\"text\"\r\n                value={email}\r\n                placeholder=\"Enter email here\"\r\n                onChange={e => setEmail(e.target.value)} />\r\n            <input\r\n                type=\"number\"\r\n                placeholder=\"Enter phone number here\"\r\n                value={phone}\r\n                onChange={e => setPhone(e.target.value)} />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter DOB here\"\r\n                value={birthdate}\r\n                onChange={e => setBirthdate(e.target.value)} />\r\n            <button\r\n                onClick={editPlayer}\r\n            >Save</button>\r\n        </div>\r\n        <div>\r\n            <h3>Licenses Owned</h3>\r\n            <LicenseTable licenses={PlayerLicenses}/>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PlayerInfo;","import React from \"react\";\r\n\r\nfunction GamesRow(game){\r\n    return(\r\n    <>\r\n    <tr>\r\n       <td>a</td> \r\n       <td>a</td>\r\n       <td>a</td>\r\n       <td>a</td>\r\n       <td>a</td>\r\n    </tr>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default GamesRow;","import React from \"react\";\r\nimport GamesRow from \"./GamesRow\"\r\n\r\nfunction GamesTable({games}){\r\n    return(\r\n        <>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Title</th>\r\n                    <th>Studio</th>\r\n                    <th>Year</th>\r\n                    <th>Genres</th>\r\n                    <th>Store Page</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {games.map((game, i)=><GamesRow game={game} key={i}/>)}\r\n            </tbody>\r\n        </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GamesTable;","import React from \"react\"\r\nimport { useState } from \"react\";\r\nimport GamesTable from \"../components/GamesTable\"\r\nimport SearchBar from \"../components/Searchbar\";\r\nimport InsertBar from '../components/InsertBar';\r\n\r\nfunction Games(){\r\n    const [games, setGames] = useState([]);\r\n    const publishers = [\"x\", \"y\", \"z\"]\r\n    const gameSearchParams = [\r\n        {\r\n            name: \"Title\",\r\n            type: \"text\",\r\n            key_name: \"title\"\r\n        },\r\n        {\r\n            name: \"Studio\",\r\n            type: \"text\",\r\n            key_name: \"studio\"\r\n        },\r\n        {\r\n            name: \"Genre\",\r\n            type: \"text\",\r\n            key_name: \"genre\"\r\n        },\r\n\r\n    ]\r\n\r\n    const Search = (params) => {\r\n        alert(JSON.stringify(params));\r\n    }\r\n\r\n    const Insert = (params) => {\r\n        alert(JSON.stringify(params));\r\n\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <h1>Games</h1>\r\n        <p>Here you can view games and redirect to pages where you can add, remove, and modify entries.</p>\r\n        <SearchBar title=\"Search Games\" params={gameSearchParams} OnSubmit={Search}></SearchBar>\r\n        <GamesTable games={[1, 2, 3]}/>\r\n        <InsertBar title=\"Insert Game\" params={gameSearchParams} OnSubmit={Insert}></InsertBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Games;","import React from 'react';\r\nimport { MdEdit} from 'react-icons/md'\r\n\r\nfunction StudioRow({ studio, onView }) {\r\n    return (\r\n        <tr>\r\n            <td>{studio.name}</td>\r\n            <td>{studio.website}</td>\r\n            <td>{studio.phone}</td>\r\n            <td>\r\n            <td><MdEdit onClick={() => onView(studio)}/></td>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default StudioRow;","import React from \"react\"\r\nimport StudioRow from './StudioRow';\r\n\r\nfunction StudioTable({studios, onView}){\r\n    return(\r\n        <>\r\n        <table id=\"studios\">\r\n            <thead>\r\n                <th>Name</th>\r\n                <th>Website</th>\r\n                <th>Phone</th>\r\n            </thead>\r\n            <tbody>\r\n            {studios.map((studio, i) => <StudioRow studio={studio}\r\n                    onView={onView}\r\n                    key={i} />)}\r\n            </tbody>\r\n        </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StudioTable;","const teststudios=[\r\n    {studio_id:'1', name:'EA', website:'EA.com', phone:123456}\r\n];\r\n\r\nexport default teststudios;","import React from 'react';\r\nimport { Link, Navigate } from 'react-router-dom';\r\nimport StudioTable from '../components/StudioTable';\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport SearchBar from '../components/Searchbar';\r\nimport InsertBar from '../components/InsertBar';\r\nimport teststudios from '../test-data/studios'\r\n\r\nfunction Studios({setStudioToView}){\r\n    \r\n    const [studios, setStudios] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    const studioSearchParams = [\r\n        {\r\n            name: \"Name\",\r\n            type: \"text\",\r\n            key_name: \"name\"\r\n        },\r\n        {\r\n            name: \"Website\",\r\n            type: \"text\",\r\n            key_name: \"website\"\r\n        },\r\n        {\r\n            name: \"Phone\",\r\n            type: \"number\",\r\n            key_name: \"phone\"\r\n        },\r\n    ]\r\n\r\n    const Search = (params) => {\r\n        alert(JSON.stringify(params));\r\n    }\r\n\r\n    const Insert = (params) => {\r\n        alert(JSON.stringify(params));\r\n        loadStudios()\r\n    }\r\n\r\n    const onView = (studio) => {\r\n        setStudioToView(studio);\r\n        navigate('/StudioInfo');\r\n    };\r\n\r\n    const loadStudios = async () => {\r\n        //const response = await fetch('/studios')\r\n        //const data = await response.json();\r\n        setStudios(teststudios);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadStudios();\r\n    }, []);\r\n\r\n    return(\r\n        <>\r\n        <h2>List of Studios</h2>\r\n        <SearchBar title=\"Search Studios\" params={studioSearchParams} OnSubmit={Search}></SearchBar>\r\n        <StudioTable studios={studios} onView={onView}></StudioTable>\r\n        <InsertBar title=\"Insert Studio\" params={studioSearchParams} OnSubmit={Insert}></InsertBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Studios;","import React, { useState } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Link, Navigate } from 'react-router-dom';\r\nimport {useEffect } from 'react';\r\n\r\nfunction StudioInfo({StudioToView}){\r\n    const [name, setName] = useState(StudioToView.name);\r\n    const [website, setWebsite] = useState(StudioToView.website);\r\n    const [phone, setPhone] = useState(StudioToView.phone);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const editStudio = async () => {\r\n        const editedStudio = {name, website, phone}\r\n        alert(JSON.stringify(editedStudio))\r\n        navigate('/')\r\n    };\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n          <div>\r\n              <h1>Edit studio</h1>\r\n              <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter name here\"\r\n                  value={name}\r\n                  onChange={e => setName(e.target.value)} />\r\n              <input\r\n                  type=\"text\"\r\n                  value={website}\r\n                  placeholder=\"Enter website here\"\r\n                  onChange={e => setWebsite(e.target.value)} />\r\n              <input\r\n                  type=\"number\"\r\n                  placeholder=\"Enter phone number here\"\r\n                  value={phone}\r\n                  onChange={e => setPhone(e.target.value)} />\r\n              <button\r\n                  onClick={editStudio}\r\n              >Save</button>\r\n          </div>\r\n          </>\r\n    );\r\n}\r\n\r\nexport default StudioInfo;","import React, { useEffect } from 'react';\r\nimport {Route, Routes } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport HomePage from './pages/HomePage';\r\nimport Players from './pages/Players';\r\nimport PlayerInfo from './pages/PlayerInfo';\r\nimport Games from './pages/Games'\r\nimport GameInfo from './pages/GameInfo';\r\nimport Studios from './pages/Studios';\r\nimport StudioInfo from './pages/StudioInfo';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport {useState} from 'react';\r\n\r\n\r\n\r\nfunction App() {\r\n  const navigate = useNavigate();\r\n  const pholder = {username: \"kaushik\",  email: \"pahujak@oregonstate.edu\", phone: \"1234567890\", birthdate: \"02/22/2002\"};\r\n  const [PlayerToView, setPlayerToView]=useState();\r\n  const [StudioToView, setStudioToView]=useState();\r\n  // const [setGameToView, setGameToView]=useState();\r\n\r\n  const SetPlayer = async (target)=>{\r\n    console.log(\"I'm really trying here.\");\r\n    console.log(target);\r\n    setPlayerToView(target);\r\n    console.log(\"checking if it really changed\");\r\n    console.log(PlayerToView);\r\n    navigate(\"/PlayerInfo\");\r\n  }\r\n  \r\n  useEffect(() =>{\r\n    console.log(\"something changed.\");\r\n    console.log(PlayerToView);\r\n  }, [PlayerToView])\r\n\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n      \r\n      <div className=\"App-header\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<HomePage/>}></Route>\r\n          <Route path=\"/Players\" element={<Players setPlayerToView={SetPlayer}/>}/>\r\n          <Route path=\"/PlayerInfo\" element={<PlayerInfo PlayerToView={PlayerToView} />}/>\r\n          <Route path=\"/Studios\" element={<Studios setStudioToView={setStudioToView}/>}/>\r\n          <Route path=\"/StudioInfo\" element={<StudioInfo StudioToView={StudioToView} />}/>\r\n          <Route path=\"/Games\" element={<Games />}/>\r\n          {/* <Route path=\"/GameInfo\">\r\n            <GameInfo GameToView={GameToView} />\r\n          </Route> */}\r\n        </Routes>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport pkg from \"../package.json\";\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nconst siteurl = pkg.homepage;\r\nconst basename = siteurl? new URL(siteurl).pathname : \"\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename={basename}>\r\n    <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}