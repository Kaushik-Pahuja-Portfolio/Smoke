{"version":3,"sources":["pages/HomePage.js","components/PlayerRow.js","components/PlayerTable.js","pages/Players.js","pages/PlayerInfo.js","components/GamesRow.js","components/GamesTable.js","components/SearchField.js","components/Searchbar.js","pages/Games.js","components/StudioRow.js","components/StudioTable.js","pages/Studios.js","pages/StudioInfo.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","to","PlayerRow","player","onView","username","email","phone","birthdate","onClick","PlayerTable","players","id","map","i","Players","setPlayerToView","useState","setPlayers","history","useNavigate","loadPlayers","a","fetch","response","json","data","useEffect","push","PlayerInfo","playerToView","name","setUsername","setEmail","setPhone","setBirthdate","editPlayer","editedPlayer","player_id","method","body","JSON","stringify","headers","status","alert","type","placeholder","value","onChange","e","target","GamesRow","game","GamesTable","games","SearchField","field","onSet","key","key_name","setValue","for","SearchBar","title","params","OnSubmit","fullquery","setFullQueryVal","val","console","log","param","Games","StudioRow","studio","website","StudioTable","studios","Studios","setStudioToView","setStudios","loadStudios","StudioInfo","studioToView","setName","setWebsite","editStudio","editedStudio","studio_id","App","PlayerToView","StudioToView","className","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","siteurl","homepage","basename","URL","pathname","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37c30ea8.chunk.js","sourcesContent":["import React from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nfunction HomePage(){\r\n\r\n    return(\r\n        <>\r\n        <h1>Home Page</h1>\r\n        <Link to=\"/Players\">Players</Link>\r\n        <Link to=\"/Studios\">Studios</Link>\r\n        <Link to=\"/Games\">Games</Link>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { MdEdit} from 'react-icons/md'\r\n\r\nfunction PlayerRow({ player, onView }) {\r\n    return (\r\n        <tr>\r\n            <td>{player.username}</td>\r\n            <td>{player.email}</td>\r\n            <td>{player.phone}</td>\r\n            <td>{player.birthdate}</td>\r\n            <td>\r\n            <td><MdEdit onClick={() => onView(player)}/></td>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default PlayerRow;","import React from \"react\"\r\nimport PlayerRow from './PlayerRow';\r\n\r\nfunction PlayerTable({players, onView}){\r\n    return(\r\n        <>\r\n        <table id=\"players\">\r\n            <thead>\r\n                <th>Username</th>\r\n                <th>e-mail</th>\r\n                <th>phone</th>\r\n                <th>DOB</th>\r\n            </thead>\r\n            <tbody>\r\n            {players.map((player, i) => <PlayerRow player={player}\r\n                    onView={onView}\r\n                    key={i} />)}\r\n            </tbody>\r\n        </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlayerTable;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PlayerTable from '../components/PlayerTable';\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Players({setPlayerToView}){\r\n    \r\n    const [players, setPlayers] = useState([]);\r\n    const history = useNavigate();\r\n\r\n    const onView = (player) => {\r\n        setPlayerToView(player);\r\n        history.push('/PlayerInfo');\r\n    };\r\n\r\n    const loadPlayers = async () => {\r\n        const response = await fetch('/players')\r\n        const data = await response.json();\r\n        setPlayers(data);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadPlayers();\r\n    }, []);\r\n\r\n    return(\r\n        <>\r\n        <h2>List of Players</h2>\r\n        <PlayerTable players={players} onView={onView}></PlayerTable>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Players;","import React, { useState } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction PlayerInfo({playerToView}){\r\n    const [username, setUsername] = useState(playerToView.name);\r\n    const [email, setEmail] = useState(playerToView.email);\r\n    const [phone, setPhone] = useState(playerToView.phone);\r\n    const [birthdate, setBirthdate] = useState(playerToView.birthdate);\r\n\r\n    const history = useNavigate();\r\n\r\n    const editPlayer = async () => {\r\n        const editedPlayer = {username, email, phone, birthdate}\r\n        const response = await fetch(`/players/${playerToView.player_id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(editedPlayer),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n        if(response.status === 200){\r\n            alert('Successfully edited the player');\r\n        } else{\r\n            alert(`Falied to edit player, status code = ${response.status}`);\r\n        }\r\n        history.push('/')\r\n    };\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h1>Edit player</h1>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter username here\"\r\n                value={username}\r\n                onChange={e => setUsername(e.target.value)} />\r\n            <input\r\n                type=\"text\"\r\n                value={email}\r\n                placeholder=\"Enter email here\"\r\n                onChange={e => setEmail(e.target.value)} />\r\n            <input\r\n                type=\"number\"\r\n                placeholder=\"Enter phone number here\"\r\n                value={phone}\r\n                onChange={e => setPhone(e.target.value)} />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter DOB here\"\r\n                value={birthdate}\r\n                onChange={e => setBirthdate(e.target.value)} />\r\n            <button\r\n                onClick={editPlayer}\r\n            >Save</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlayerInfo;","import React from \"react\";\r\n\r\nfunction GamesRow(game){\r\n    return(\r\n    <>\r\n    <tr>\r\n       <td>a</td> \r\n       <td>a</td>\r\n       <td>a</td>\r\n       <td>a</td>\r\n       <td>a</td>\r\n    </tr>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default GamesRow;","import React from \"react\";\r\nimport GamesRow from \"./GamesRow\"\r\n\r\nfunction GamesTable({games}){\r\n    return(\r\n        <>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Title</th>\r\n                    <th>Studio</th>\r\n                    <th>Year</th>\r\n                    <th>Genres</th>\r\n                    <th>Store Page</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {games.map((game, i)=><GamesRow game={game} key={i}/>)}\r\n            </tbody>\r\n        </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GamesTable;","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nfunction SearchField({field, onSet}){\r\n    const fieldName = field.name;\r\n    const key = field.key_name;\r\n    const [value, setValue] = useState();\r\n\r\n    useEffect(()=>{\r\n        //console.log(key, value);\r\n        onSet(key, value);\r\n    })\r\n\r\n    return(\r\n        <>\r\n        <label for={field.name}>{field.name}</label>\r\n        <input type=\"text\" id={field.name} onChange={e=>{setValue(e.target.value);}}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchField;","import React from \"react\";\r\nimport SearchField from \"./SearchField\";\r\n\r\nfunction SearchBar ({title, params, OnSubmit}){\r\n    let fullquery = {};\r\n    const setFullQueryVal = (key, val) => {\r\n        fullquery[key] = val;\r\n        console.log(fullquery);\r\n    }\r\n    return(\r\n        <form>\r\n            <label>{title}</label>\r\n            {params.map((param, i) => <SearchField field={param} onSet={setFullQueryVal} key={i}/>)}\r\n            <button onClick={() => OnSubmit(fullquery)}>Search</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React from \"react\"\r\nimport { useState } from \"react\";\r\nimport GamesTable from \"../components/GamesTable\"\r\nimport SearchBar from \"../components/Searchbar\";\r\n\r\nfunction Games(){\r\n    const [games, setGames] = useState([]);\r\n    const publishers = [\"x\", \"y\", \"z\"]\r\n    const gameSearchParams = [\r\n        {\r\n            name: \"Title\",\r\n            type: \"text\",\r\n            key_name: \"title\"\r\n        },\r\n        {\r\n            name: \"Studio\",\r\n            type: \"text\",\r\n            key_name: \"studio\"\r\n        },\r\n        {\r\n            name: \"Genre\",\r\n            type: \"text\",\r\n            key_name: \"genre\"\r\n        },\r\n\r\n    ]\r\n\r\n    const Search = (params) => {\r\n        alert(JSON.stringify(params));\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <h1>Games</h1>\r\n        <p>Here you can view games and redirect to pages where you can add, remove, and modify entries.</p>\r\n        <SearchBar title=\"Search Games\" params={gameSearchParams} OnSubmit={Search}></SearchBar>\r\n        <GamesTable games={[1, 2, 3]}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Games;","import React from 'react';\r\nimport { MdEdit} from 'react-icons/md'\r\n\r\nfunction StudioRow({ studio, onView }) {\r\n    return (\r\n        <tr>\r\n            <td>{studio.name}</td>\r\n            <td>{studio.website}</td>\r\n            <td>{studio.phone}</td>\r\n            <td>\r\n            <td><MdEdit onClick={() => onView(studio)}/></td>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default StudioRow;","import React from \"react\"\r\nimport StudioRow from './StudioRow';\r\n\r\nfunction StudioTable({studios, onView}){\r\n    return(\r\n        <>\r\n        <table id=\"studios\">\r\n            <thead>\r\n                <th>Name</th>\r\n                <th>Website</th>\r\n                <th>phone</th>\r\n            </thead>\r\n            <tbody>\r\n            {studios.map((studio, i) => <StudioRow studio={studio}\r\n                    onView={onView}\r\n                    key={i} />)}\r\n            </tbody>\r\n        </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StudioTable;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport StudioTable from '../components/StudioTable';\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Studios({setStudioToView}){\r\n    \r\n    const [studios, setStudios] = useState([]);\r\n    const history = useNavigate();\r\n\r\n    const onView = (studio) => {\r\n        setStudioToView(studio);\r\n        history.push('/StudioInfo');\r\n    };\r\n\r\n    const loadStudios = async () => {\r\n        const response = await fetch('/studios')\r\n        const data = await response.json();\r\n        setStudios(data);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadStudios();\r\n    }, []);\r\n\r\n    return(\r\n        <>\r\n        <h2>List of Studios</h2>\r\n        <StudioTable studios={studios} onView={onView}></StudioTable>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Studios;","import React, { useState } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction StudioInfo({studioToView}){\r\n    const [name, setName] = useState(studioToView.name);\r\n    const [website, setWebsite] = useState(studioToView.website);\r\n    const [phone, setPhone] = useState(studioToView.phone);\r\n\r\n    const history = useNavigate();\r\n\r\n    const editStudio = async () => {\r\n        const editedStudio = {name, website, phone}\r\n        const response = await fetch(`/studios/${studioToView.studio_id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(editedStudio),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n        if(response.status === 200){\r\n            alert('Successfully edited the studio');\r\n        } else{\r\n            alert(`Falied to edit studio, status code = ${response.status}`);\r\n        }\r\n        history.push('/')\r\n    };\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h1>Edit studio</h1>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter name here\"\r\n                value={name}\r\n                onChange={e => setName(e.target.value)} />\r\n            <input\r\n                type=\"text\"\r\n                value={website}\r\n                placeholder=\"Enter website here\"\r\n                onChange={e => setWebsite(e.target.value)} />\r\n            <input\r\n                type=\"number\"\r\n                placeholder=\"Enter phone number here\"\r\n                value={phone}\r\n                onChange={e => setPhone(e.target.value)} />\r\n            <button\r\n                onClick={editStudio}\r\n            >Save</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StudioInfo;","import React from 'react';\r\nimport {Route, Routes } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport HomePage from './pages/HomePage';\r\nimport Players from './pages/Players';\r\nimport PlayerInfo from './pages/PlayerInfo';\r\nimport Games from './pages/Games'\r\nimport GameInfo from './pages/GameInfo';\r\nimport Studios from './pages/Studios';\r\nimport StudioInfo from './pages/StudioInfo';\r\n\r\nimport {useState} from 'react';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [PlayerToView, setPlayerToView]=useState();\r\n  const [StudioToView, setStudioToView]=useState();\r\n  // const [setGameToView, setGameToView]=useState();\r\n  \r\n\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n      \r\n      <div className=\"App-header\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<HomePage/>}></Route>\r\n          <Route path=\"/Players\" element={<Players setPlayerToView={setPlayerToView}/>}/>\r\n          <Route path=\"/PlayerInfo\">\r\n            <PlayerInfo PlayerToView={PlayerToView} />\r\n          </Route>\r\n          <Route path=\"/Studios\" element={<Studios setStudioToView={setStudioToView}/>}/>\r\n          <Route path=\"/StudioInfo\">\r\n            <StudioInfo StudioToView={StudioToView} />\r\n          </Route>\r\n          <Route path=\"/Games\" element={<Games />}/>\r\n          {/* <Route path=\"/GameInfo\">\r\n            <GameInfo GameToView={GameToView} />\r\n          </Route> */}\r\n        </Routes>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport pkg from \"../package.json\";\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nconst siteurl = pkg.homepage;\r\nconst basename = siteurl? new URL(siteurl).pathname : \"\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename={basename}>\r\n    <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}